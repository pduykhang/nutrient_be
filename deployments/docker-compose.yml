services:
  api:
    build:
      context: ..
      dockerfile: deployments/docker/Dockerfile.dev
    container_name: nutrient-api-dev
    working_dir: /app
    ports:
      - "8080:8080"
      - "8082:8082"
    environment:
      # Config file path (used by Air and application)
      - CONFIG_PATH=/app/configs/config.dev.yaml
      # Override database URI if needed (Viper maps DATABASE_URI -> database.uri)
      - DATABASE_URI=mongodb://mongo:27017
      # Override JWT secret if needed (Viper maps AUTH_JWT_SECRET -> auth.jwt_secret)
      - AUTH_JWT_SECRET=dev-secret-key
      # Air working directory
      - AIR_WD=/app
      # NATS configuration (Viper maps NATS_URL -> nats.url, NATS_ENABLED -> nats.enabled)
      - NATS_URL=nats://nats:4222
      - NATS_ENABLED=true
    volumes:
      # Mount entire project for hot reload
      - ..:/app
      # Exclude tmp and bin directories from host mounts (let container handle them)
      - /app/tmp
      - /app/bin
    depends_on:
      mongo:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - nutrient-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://api:8080/health/liveness"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=nutrient_db
    volumes:
      - mongo-data:/data/db
      - ../scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - nutrient-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/nutrient_db --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    networks:
      - nutrient-network

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--http_port 8222"
    networks:
      - nutrient-network

volumes:
  mongo-data:

networks:
  nutrient-network:
    driver: bridge
